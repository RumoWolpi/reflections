What happens when you initialize a repository?
git starts to create hidden files to track the history 
of the files in the repository.

What is the value of the staging area.
keep track of files you changed since the last commit.

How can you use the staging area to make sure that your commit
contains only one logical change?
use git diff without further attributes to compare
the files in your staging area and working directory
use gif diff --staged to compare the files in the staging area
and the repository.
by doing this you can make sure to commit only one logical change

what are some situations where using branches would be helpful in keeping your history organized? How would branches help?
1. you try out a new feature but want to have a running model 
2. you translate your game and want to merge the branches later

How do the diagrams help you visualize the branch structure?
by using git log --graph --oneline branch_name_1 branch_name_2
git shows you the branch sructure of your repository. 
this is important, as you need to know where to work on which 
problem, and to be careful to not go into a headless state
without using git branch -b new_branch_name